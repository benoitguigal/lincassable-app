create type "public"."statut_mailing" as enum ('En attente', 'En cours', 'Envoyé', 'Échec');

alter type "public"."app_permission" rename to "app_permission__old_version_to_be_dropped";

create type "public"."app_permission" as enum ('point_de_collecte.select', 'point_de_collecte.insert', 'point_de_collecte.update', 'point_de_collecte.delete', 'tournee.select', 'tournee.insert', 'tournee.update', 'tournee.delete', 'collecte.select', 'collecte.insert', 'collecte.update', 'collecte.delete', 'transporteur.select', 'transporteur.insert', 'transporteur.update', 'transporteur.delete', 'transporteur_users.select', 'transporteur_users.update', 'transporteur_users.insert', 'transporteur_users.delete', 'zone_de_collecte.select', 'zone_de_collecte.update', 'zone_de_collecte.insert', 'zone_de_collecte.delete', 'prevision.select', 'mailing.select', 'mailing.insert', 'mailing.update', 'mailing.delete', 'mail_template.select');

create table "public"."mail_template" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "sujet" text not null,
    "corps" text not null,
    "nom" text not null,
    "variables" json
);


alter table "public"."mail_template" enable row level security;

create table "public"."mailing" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "statut" statut_mailing not null,
    "point_de_collecte_ids" bigint[],
    "variables" json,
    "mail_template_id" bigint not null,
    "date_envoi" timestamp without time zone
);


alter table "public"."mailing" enable row level security;

alter table "public"."role_permissions" alter column permission type "public"."app_permission" using permission::text::"public"."app_permission";

drop type "public"."app_permission__old_version_to_be_dropped";

CREATE UNIQUE INDEX mail_template_pkey ON public.mail_template USING btree (id);

CREATE UNIQUE INDEX mailing_pkey ON public.mailing USING btree (id);

alter table "public"."mail_template" add constraint "mail_template_pkey" PRIMARY KEY using index "mail_template_pkey";

alter table "public"."mailing" add constraint "mailing_pkey" PRIMARY KEY using index "mailing_pkey";

alter table "public"."mailing" add constraint "mailing_mail_template_id_fkey" FOREIGN KEY (mail_template_id) REFERENCES mail_template(id) ON UPDATE CASCADE not valid;

alter table "public"."mailing" validate constraint "mailing_mail_template_id_fkey";

grant delete on table "public"."mail_template" to "anon";

grant insert on table "public"."mail_template" to "anon";

grant references on table "public"."mail_template" to "anon";

grant select on table "public"."mail_template" to "anon";

grant trigger on table "public"."mail_template" to "anon";

grant truncate on table "public"."mail_template" to "anon";

grant update on table "public"."mail_template" to "anon";

grant delete on table "public"."mail_template" to "authenticated";

grant insert on table "public"."mail_template" to "authenticated";

grant references on table "public"."mail_template" to "authenticated";

grant select on table "public"."mail_template" to "authenticated";

grant trigger on table "public"."mail_template" to "authenticated";

grant truncate on table "public"."mail_template" to "authenticated";

grant update on table "public"."mail_template" to "authenticated";

grant delete on table "public"."mail_template" to "service_role";

grant insert on table "public"."mail_template" to "service_role";

grant references on table "public"."mail_template" to "service_role";

grant select on table "public"."mail_template" to "service_role";

grant trigger on table "public"."mail_template" to "service_role";

grant truncate on table "public"."mail_template" to "service_role";

grant update on table "public"."mail_template" to "service_role";

grant delete on table "public"."mailing" to "anon";

grant insert on table "public"."mailing" to "anon";

grant references on table "public"."mailing" to "anon";

grant select on table "public"."mailing" to "anon";

grant trigger on table "public"."mailing" to "anon";

grant truncate on table "public"."mailing" to "anon";

grant update on table "public"."mailing" to "anon";

grant delete on table "public"."mailing" to "authenticated";

grant insert on table "public"."mailing" to "authenticated";

grant references on table "public"."mailing" to "authenticated";

grant select on table "public"."mailing" to "authenticated";

grant trigger on table "public"."mailing" to "authenticated";

grant truncate on table "public"."mailing" to "authenticated";

grant update on table "public"."mailing" to "authenticated";

grant delete on table "public"."mailing" to "service_role";

grant insert on table "public"."mailing" to "service_role";

grant references on table "public"."mailing" to "service_role";

grant select on table "public"."mailing" to "service_role";

grant trigger on table "public"."mailing" to "service_role";

grant truncate on table "public"."mailing" to "service_role";

grant update on table "public"."mailing" to "service_role";

create policy "Allow select for authorized"
on "public"."mail_template"
as permissive
for select
to authenticated
using (( SELECT authorize_user('mail_template.select'::text) AS authorize));


create policy "Allow delete for authorized"
on "public"."mailing"
as permissive
for delete
to authenticated
using (( SELECT authorize_user('mailing.delete'::text) AS authorize));


create policy "Allow insert for authorized"
on "public"."mailing"
as permissive
for insert
to authenticated
with check (( SELECT authorize_user('mailing.insert'::text) AS authorize));


create policy "Allow select for authorized"
on "public"."mailing"
as permissive
for select
to authenticated
using (( SELECT authorize_user('mailing.select'::text) AS authorize));


create policy "Allow update for authorized"
on "public"."mailing"
as permissive
for update
to authenticated
using (( SELECT authorize_user('mailing.update'::text) AS authorize));



